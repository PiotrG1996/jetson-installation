name: jetson-ROS-YOLO.yml

on: [push, pull_request]

jobs:
  build-and-test-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        run: |
          docker build -t yolo-ros .
          docker run --rm yolo-ros

  build-and-test-native:
    runs-on: ubuntu-latest
    env:
      ROS_DISTRO: humble
      WORKSPACE_ROOT: /home/runner/work/yolo_ws

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup ROS 2
        uses: ros-tooling/setup-ros@v0.2
        with:
          version: ${{ env.ROS_DISTRO }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip \
                                  libboost-python-dev \
                                  ros-dev-tools \
                                  ros-${{ env.ROS_DISTRO }}-rmw-cyclonedds-cpp \
                                  ros-${{ env.ROS_DISTRO }}-vision-opencv
          pip3 install --upgrade --no-cache-dir torch==1.13.0+cu117 \
                                            torchvision==0.14.0+cu117 \
                                            torchaudio==0.13.0 \
                                            --extra-index-url https://download.pytorch.org/whl/cu117

      - name: Create and setup workspace
        run: |
          mkdir -p ${{ env.WORKSPACE_ROOT }}/src
          mv ${GITHUB_WORKSPACE} ${{ env.WORKSPACE_ROOT }}/src/
          cd ${{ env.WORKSPACE_ROOT }}/src/yolo_ros
          pip3 install --no-cache-dir -r requirements.txt
          rosdep update
          rosdep install --from-paths . -y --ignore-src

      - name: Build workspace
        run: |
          source /opt/ros/${{ env.ROS_DISTRO }}/setup.bash
          cd ${{ env.WORKSPACE_ROOT }}
          colcon build --event-handlers console_cohesion+

      - name: Run tests
        run: |
          source /opt/ros/${{ env.ROS_DISTRO }}/setup.bash
          source ${{ env.WORKSPACE_ROOT }}/install/setup.bash
          colcon test --event-handlers console_cohesion+
          colcon test-result --verbose
